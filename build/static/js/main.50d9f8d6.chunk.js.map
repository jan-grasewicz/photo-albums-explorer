{"version":3,"sources":["contexts/AppContext.js","components/AlbumListItem/AlbumListItem.js","components/Albums/Albums.js","components/Album/Album.js","components/Photo/Photo.js","components/UserProfile/UserProfile.js","components/Header/Header.js","components/ScrollToTop/ScrollToTop.js","components/Root/Root.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","Provider","Consumer","AppContextProvider","state","users","albums","getUserDataByUserId","userId","_this","find","user","id","getUserDataByAlbumId","albumId","album","undefined","getAlbumDataByAlbumId","isLoading","error","abortController","AbortController","usersPromise","fetch","signal","then","response","json","albumsPromise","_this2","this","Promise","all","_ref","_ref2","Object","slicedToArray","setState","catch","message","abort","console","react_default","a","createElement","value","props","children","Component","withContext","assign","appContext","photo","concat","photos","_this$state","_this$props","title","userData","className","src","thumbnailUrl","alt","react_router_dom","to","Fragment","username","_this$props$appContex","map","components_AlbumListItem_AlbumListItem","key","windowWidth","updateWindowDimensions","window","innerWidth","addEventListener","match","params","removeEventListener","isContextDataLoading","parseInt","url","photoId","name","email","website","filter","Header","onClick","history","goBack","withRouter","ScrollToTop","prevProps","location","pathname","scrollTo","Root","components_Header_Header","components_ScrollToTop_ScrollToTop","react_router","exact","path","component","Albums","Album","Photo","UserProfile","render","Boolean","hostname","ReactDOM","AppContext_AppContextProvider","components_Root_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50d9f8d6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport const AppContext = React.createContext();\nconst { Provider, Consumer } = AppContext;\n\nexport default class AppContextProvider extends Component {\n  state = {\n    users: [],\n    albums: [],\n    getUserDataByUserId: userId =>\n      this.state.users.find(user => user.id === userId),\n    getUserDataByAlbumId: albumId => {\n      const album = this.state.albums.find(album => album.id === albumId);\n      return this.state.getUserDataByUserId(\n        album !== undefined && album.userId\n      );\n    },\n    getAlbumDataByAlbumId: albumId =>\n      this.state.albums.find(album => album.id === albumId),\n    isLoading: true,\n    error: null\n  };\n\n  abortController = new AbortController();\n\n  usersPromise = fetch(\"https://jsonplaceholder.typicode.com/users\", {\n    signal: this.abortController.signal\n  }).then(response => response.json());\n  albumsPromise = fetch(\"https://jsonplaceholder.typicode.com/albums\", {\n    signal: this.abortController.signal\n  }).then(response => response.json());\n\n  componentDidMount() {\n    Promise.all([this.usersPromise, this.albumsPromise])\n      .then(([users, albums]) => {\n        this.setState({ users });\n        this.setState({ albums });\n      })\n      .then(() => this.setState({ error: null, isLoading: false }))\n      .catch(error =>\n        this.setState({ error: error.message, isLoading: false })\n      );\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    this.state.error && console.error(this.state.error);\n    return <Provider value={this.state}>{this.props.children}</Provider>;\n  }\n}\n\nexport const withContext = Component => props => (\n  <Consumer>{value => <Component {...props} appContext={value} />}</Consumer>\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withContext } from \"../../contexts/AppContext\";\n\nimport \"./AlbumListItem.css\";\n\nclass AlbumListItem extends Component {\n  state = {\n    photo: {},\n    isLoading: true,\n    error: null\n  };\n\n  abortController = new AbortController();\n\n  componentDidMount() {\n    fetch(\n      `https://jsonplaceholder.typicode.com/photos?albumId=${this.props.id}`,\n      {\n        signal: this.abortController.signal\n      }\n    )\n      .then(response => response.json())\n      .then(photos =>\n        this.setState({ photo: photos[0], isLoading: false, error: null })\n      )\n      .catch(error =>\n        this.setState({ error: error.message, isLoading: false })\n      );\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    const { photo, isLoading, error } = this.state;\n    error && console.error(error);\n    const {\n      title,\n      id,\n      userId,\n      appContext: { getUserDataByUserId }\n    } = this.props;\n    const userData = getUserDataByUserId(userId);\n    return (\n      <li className=\"album-li\">\n        <div className=\"album-li__img-container\">\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <img\n              className=\"album-li__img\"\n              src={photo.thumbnailUrl}\n              alt=\"thumbnail\"\n            />\n          )}\n        </div>\n        <div className=\"album-li__txt\">\n          <Link to={`/album/${id}`}>\n            <h3 className=\"album-li__title\">{title}</h3>\n          </Link>\n          {userId && (\n            <>\n              <span> by </span>\n              <Link to={`/user/${userId}`}>\n                <p className=\"album-li__author\">\n                  {userData !== undefined && userData.username}\n                </p>\n              </Link>\n            </>\n          )}\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default withContext(AlbumListItem);\n","import React, { Component } from \"react\";\nimport AlbumListItem from \"../AlbumListItem/AlbumListItem\";\nimport { withContext } from \"../../contexts/AppContext\";\n\nimport \"./Albums.css\";\n\nclass Albums extends Component {\n  render() {\n    const { albums, isLoading } = this.props.appContext;\n    return (\n      <div className=\"top-bar-fix\">\n        <h2 className=\"albums__title\">Albums</h2>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <ul className=\"albums__list\">\n            {albums.map(album => (\n              <AlbumListItem\n                key={album.id}\n                id={album.id}\n                title={album.title}\n                userId={album.userId}\n              />\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withContext(Albums);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withContext } from \"../../contexts/AppContext\";\n\nimport \"./Album.css\";\n\nclass Album extends Component {\n  state = {\n    photos: [],\n    windowWidth: null,\n    isLoading: true,\n    error: null\n  };\n\n  updateWindowDimensions = () => {\n    this.setState({ windowWidth: window.innerWidth });\n  };\n\n  abortController = new AbortController();\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n    fetch(\n      `https://jsonplaceholder.typicode.com/photos?albumId=${\n        this.props.match.params.albumId\n      }`,\n      {\n        signal: this.abortController.signal\n      }\n    )\n      .then(response => response.json())\n      .then(photos => this.setState({ photos, isLoading: false, error: null }))\n      .catch(error =>\n        this.setState({ error: error.message, isLoading: false })\n      );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    this.abortController.abort();\n  }\n\n  render() {\n    const { albumId } = this.props.match.params;\n    const { photos, windowWidth, isLoading, error } = this.state;\n    error && console.error(error);\n    const {\n      getUserDataByAlbumId,\n      getAlbumDataByAlbumId,\n      isLoading: isContextDataLoading\n    } = this.props.appContext;\n\n    const album = getAlbumDataByAlbumId(parseInt(albumId));\n    const userData = getUserDataByAlbumId(parseInt(albumId));\n    return (\n      <div className=\"top-bar-fix\">\n        <div className=\"album__info\">\n          {isContextDataLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <h2 className=\"album__info__title\">\n                {album !== undefined && album.title}\n              </h2>\n              <span className=\"album__info__span\"> by </span>\n              <Link to={`/user/${userData !== undefined && userData.id}`}>\n                <p className=\"album__info__author\">\n                  {userData !== undefined && userData.username}\n                </p>\n              </Link>\n            </>\n          )}\n        </div>\n        <ul className=\"album__photos\">\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              {photos.map(photo => (\n                <li key={photo.id}>\n                  <Link to={`/photo/${photo.id}`}>\n                    <img\n                      className=\"album__photos__thumbnail\"\n                      src={windowWidth > 640 ? photo.url : photo.thumbnailUrl}\n                      alt=\"thumbnail\"\n                    />\n                  </Link>\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withContext(Album);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withContext } from \"../../contexts/AppContext\";\n\nimport \"./Photo.css\";\n\nclass Photo extends Component {\n  state = {\n    photo: {},\n    isLoading: true,\n    error: null\n  };\n\n  abortController = new AbortController();\n\n  componentDidMount() {\n    fetch(\n      `https://jsonplaceholder.typicode.com/photos?id=${\n        this.props.match.params.photoId\n      }`,\n      {\n        signal: this.abortController.signal\n      }\n    )\n      .then(response => response.json())\n      .then(photo =>\n        this.setState({ photo: photo[0], isLoading: false, error: null })\n      )\n      .catch(error =>\n        this.setState({ error: error.message, isLoading: false })\n      );\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    const { photo, isLoading, error } = this.state;\n    error && console.error(error);\n    const {\n      getUserDataByAlbumId,\n      isLoading: isContextDataLoading\n    } = this.props.appContext;\n\n    const userData = getUserDataByAlbumId(photo.albumId);\n    return (\n      <div className=\"top-bar-fix\">\n        <div className=\"photo__display\">\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <img className=\"photo__img\" src={photo.url} alt=\"fullsize\" />\n          )}\n        </div>\n        <div className=\"photo__info\">\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <h3 className=\"photo__info__title\">{photo.title}</h3>\n          )}\n          {isContextDataLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <span className=\"photo__info__span\"> by </span>\n              <Link to={`/user/${userData !== undefined && userData.id}`}>\n                <p className=\"photo__info__author\">\n                  {userData !== undefined && userData.username}\n                </p>\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withContext(Photo);\n","import React, { Component } from \"react\";\nimport { withContext } from \"../../contexts/AppContext\";\nimport AlbumListItem from \"../AlbumListItem/AlbumListItem\";\n\nimport \"./UserProfile.css\";\n\nclass UserProfile extends Component {\n  render() {\n    const {\n      appContext: { getUserDataByUserId, albums, isLoading },\n      match\n    } = this.props;\n    const userData = getUserDataByUserId(parseInt(match.params.userId));\n    return (\n      <div className=\"top-bar-fix\">\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"profile\">\n            {userData !== undefined && (\n              <div className=\"profile__user-data\">\n                <h2 className=\"profile__user-data__title\">\n                  {userData.username}'s Profile\n                </h2>\n                <div className=\"profile__user-data__content\">\n                  <p>full name: </p>\n                  <p>{userData.name}</p>\n                  <p>e-mail: </p>\n                  <p>{userData.email}</p>\n                  <p>website: </p>\n                  <p>{userData.website}</p>\n                </div>\n              </div>\n            )}\n            {userData !== undefined && (\n              <div className=\"profile__albums-section\">\n                <h3 className=\"profile__albums-title\">\n                  {userData.username}'s albums\n                </h3>\n                <ul className=\"profile__albums\">\n                  {albums\n                    .filter(album => album.userId === userData.id)\n                    .map(album => (\n                      <AlbumListItem\n                        key={album.id}\n                        id={album.id}\n                        title={album.title}\n                      />\n                    ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withContext(UserProfile);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <Link to=\"/\">\n          <h1 className=\"header__app-name\">XyZ</h1>\n        </Link>\n        <p className=\"header__app-desc\">photo albums explorer</p>\n        <button className=\"header__btn\" onClick={this.props.history.goBack}>\n          <img\n            className=\"header__btn__img\"\n            src={process.env.PUBLIC_URL + \"/arrowLeft.png\"}\n            alt=\"go back\"\n          />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Albums from \"../Albums/Albums\";\nimport Album from \"../Album/Album\";\nimport Photo from \"../Photo/Photo\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Header from \"../Header/Header\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\n\nimport \"./Root.css\";\n\nclass Root extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Header />\n          <ScrollToTop>\n            <Switch>\n              <Route exact path=\"/\" component={Albums} />\n              <Route path=\"/album/:albumId\" component={Album} />\n              <Route path=\"/photo/:photoId\" component={Photo} />\n              <Route path=\"/user/:userId\" component={UserProfile} />\n              <Route render={() => <h3>Page does not exist.</h3>} />\n            </Switch>\n          </ScrollToTop>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppContextProvider from \"./contexts/AppContext\";\nimport Root from \"./components/Root/Root\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <AppContextProvider>\n    <Root />\n  </AppContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}